{"version":3,"file":"pibidav.js","sources":["../../../../apps/pibidav/pibidav/public/js/dist/nc_browser/TreeNode.vue?rollup-plugin-vue=script.js","../../../../apps/pibidav/pibidav/public/js/dist/nc_browser/NcBrowser.vue?rollup-plugin-vue=script.js","../../../../apps/pibidav/pibidav/public/js/dist/nc_upload.js","../../../../apps/pibidav/pibidav/public/js/dist/nc_browser/index.js","../../../../apps/pibidav/pibidav/public/js/dist/nc_addon/TreeNode.vue?rollup-plugin-vue=script.js","../../../../apps/pibidav/pibidav/public/js/dist/nc_addon/NcBrowser.vue?rollup-plugin-vue=script.js","../../../../apps/pibidav/pibidav/public/js/dist/nc_folder.js","../../../../apps/pibidav/pibidav/public/js/dist/nc_addon/index.js"],"sourcesContent":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: \"TreeNode\",\n  props: [\"node\", \"selected_node\"],\n  components: {\n    TreeNode: () => frappe.ui.components.TreeNode\n  },\n  computed: {\n    icon() {\n      let icons = {\n        open: frappe.utils.icon(\"folder-open\", \"md\"),\n        closed: frappe.utils.icon(\"folder-normal\", \"md\"),\n        leaf: frappe.utils.icon(\"primitive-dot\", \"xs\")\n      };\n      if (this.node.is_leaf) return icons.leaf;\n      if (this.node.open) return icons.open;\n      return icons.closed;\n    }\n  }\n};\n","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport TreeNode from \"./TreeNode.vue\";\n\nexport default {\n  name: \"NcBrowser\",  \n  components: {\n    TreeNode\n  },\n  data() {\n    return {\n      node: {\n        label: __(\"/\"),\n        value: \"/\",\n        children: [],\n        children_start: 0,\n        children_loading: false,\n        is_leaf: false,\n        fetching: false,\n        fetched: false,\n        open: false\n      },\n      selected_node: {},\n      page_length: 500\n    };\n  },\n  mounted() {\n    this.toggle_node(this.node);\n  },\n  methods: {\n    toggle_node(node) {\n      if (!node.is_leaf && !node.fetched) {\n        node.fetching = true;\n        node.children_start = 0;\n        node.children_loading = false;\n        this.get_files_in_folder(node.value, 0).then(\n          ({ files, has_more }) => {\n            node.open = true;\n            node.children = files;\n            node.fetched = true;\n            node.fetching = false;\n            node.children_start += this.page_length;\n            node.has_more_children = has_more;\n            this.select_node(node);\n          }\n        );\n      } else {\n        node.open = !node.open;\n        this.select_node(node);\n      }\n    },\n    load_more(node) {\n      if (node.has_more_children) {\n        let start = node.children_start;\n        node.children_loading = true;\n        this.get_files_in_folder(node.value, start).then(\n          ({ files, has_more }) => {\n            node.children = node.children.concat(files);\n            node.children_start += this.page_length;\n            node.has_more_children = has_more;\n            node.children_loading = false;\n          }\n        );\n      }\n    },\n    select_node(node) {\n      //if (node.is_leaf) {\n        this.selected_node = node;\n      //}\n    },\n    get_files_in_folder(folder, start) {\n      return frappe\n      .call(\"pibidav.pibidav.custom.get_nc_files_in_folder\", {\n        folder,\n        start,\n        page_length: this.page_length\n      })\n      .then(r => {\n        let { files = [], has_more = false } = r.message || {};\n        files = files.map(file => this.make_file_node(file));\n        return { files, has_more };\n      });\n    },\n    make_file_node(file) {\n      let filename = file.file_name || file.name;\n      let label = frappe.utils.file_name_ellipsis(filename, 40);\n      return {\n        label: label,\n        filename: filename,\n        file_url: file.file_url,\n        value: file.name,\n        is_leaf: !file.is_folder,\n        fetched: !file.is_folder, // fetched if node is leaf\n        children: [],\n        children_loading: false,\n        children_start: 0,\n        open: false,\n        fetching: false\n      };\n    },\n    select_folder() {\n      let selected_file = this.selected_node;\n      return this.upload_to_folder({\n        is_folder: !selected_file.is_leaf,\n\tfile_name: selected_file.filename,\n        fileid: selected_file.file_url,\n        path: selected_file.value\n      });\n    },\n    upload_to_folder(file) {\n      return file;\n    }\n  }\n};\n","// Copyright (c) 2022, pibiCo and Contributors\n// MIT License. See license.txt\n\nimport NcBrowser from './nc_browser';\n\nfrappe.provide('frappe.ui');\nfrappe.ui.pibiDocs = NcBrowser;\n","import NcBrowserComponent from './NcBrowser.vue';\n\nexport default class Browser {\n\tconstructor({\n\t\twrapper,\n\t\tmethod,\n\t\ton_success,\n\t\tdoctype,\n\t\tdocname,\n\t\tfieldname,\n\t\tfiles,\n\t\tfolder,\n\t\tdisable_file_browser,\n\t\tfrm\n\t} = {}) {\n\n\t\tif (!wrapper) {\n\t\t\tthis.make_dialog();\n\t\t} else {\n\t\t\tthis.wrapper = wrapper.get ? wrapper.get(0) : wrapper;\n\t\t}\n\n\t\tthis.$ncbrowser = new Vue({\n\t\t\tel: this.wrapper,\n\t\t\trender: h => h(NcBrowserComponent, {\n\t\t\t\tprops: {\n\t\t\t\t\tshow_upload_button: !Boolean(this.dialog),\n\t\t\t\t\tdoctype,\n\t\t\t\t\tdocname,\n\t\t\t\t\tfieldname,\n\t\t\t\t\tmethod,\n\t\t\t\t\tfolder,\n\t\t\t\t\ton_success,\n\t\t\t\t\tdisable_file_browser\n\t\t\t\t}\n\t\t\t})\n\t\t});\n\n\t\tthis.browser = this.$ncbrowser.$children[0];\n\n\t\tthis.browser.$watch('close_dialog', (close_dialog) => {\n\t\t\tif (close_dialog) {\n\t\t\t\tthis.dialog && this.dialog.hide();\n\t\t\t}\n\t\t});\n\n  }\n  \n\tselect_folder() {\n\t\tthis.dialog && this.dialog.get_primary_btn().prop('disabled', true);\n\t\treturn this.browser.select_folder();\n\t}\n\n\tmake_dialog() {\n\t\tthis.dialog = new frappe.ui.Dialog({\n\t\t\ttitle: __('Select NextCloud Folder'),\n      size: 'large',\n      primary_action_label: __('Select'),\n\t\t\tprimary_action: () => {\n        let nc_folder = this.select_folder();\n        let dtdn = this.wrapper.ownerDocument.body.getAttribute('data-route').replace('Form/', '');\n        let pos = dtdn.lastIndexOf('/');\n        let docname = dtdn.substr(pos+1);\n        let doctype = dtdn.replace('/'+docname,'')\n        if (nc_folder.is_folder) {\n          frappe.db.set_value(\"PibiDAV Addon\", `pbc_${docname}`, {\n            \"nc_folder\": nc_folder.path\n          });         \n        } else {\n          frappe.msgprint(__('You have selected a file and not a folder'), nc_folder.file_name);\n        }\n        this.dialog.hide();\n      }  \n\t\t});\n\n\t\tthis.wrapper = this.dialog.body;\n\t\tthis.dialog.show();\n\t\tthis.dialog.$wrapper.on('hidden.bs.modal', function() {\n\t\t\t$(this).data('bs.modal', null);\n\t\t\t$(this).remove();\n\t\t});\n\t}\n}\n","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nexport default {\n  name: \"TreeNode\",\n  props: [\"node\", \"selected_node\"],\n  components: {\n    TreeNode: () => frappe.ui.components.TreeNode\n  },\n  computed: {\n    icon() {\n      let icons = {\n        open: frappe.utils.icon(\"folder-open\", \"md\"),\n        closed: frappe.utils.icon(\"folder-normal\", \"md\"),\n        leaf: frappe.utils.icon(\"primitive-dot\", \"xs\")\n      };\n      if (this.node.is_leaf) return icons.leaf;\n      if (this.node.open) return icons.open;\n      return icons.closed;\n    }\n  }\n};\n","//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport TreeNode from \"./TreeNode.vue\";\n\nexport default {\n  name: \"NcBrowser\",  \n  components: {\n    TreeNode\n  },\n  data() {\n    return {\n      secret: '',\n      ncCreateFolder: false,\n      shareType: '',\n      node: {\n        label: __(\"/\"),\n        value: \"/\",\n        children: [],\n        children_start: 0,\n        children_loading: false,\n        is_leaf: false,\n        fetching: false,\n        fetched: false,\n        open: false\n      },\n      selected_node: {},\n      page_length: 500\n    };\n  },\n  mounted() {\n    this.toggle_node(this.node);\n  },\n  methods: {\n    toggle_node(node) {\n      if (!node.is_leaf && !node.fetched) {\n        node.fetching = true;\n        node.children_start = 0;\n        node.children_loading = false;\n        this.get_files_in_folder(node.value, 0).then(\n          ({ files, has_more }) => {\n            node.open = true;\n            node.children = files;\n            node.fetched = true;\n            node.fetching = false;\n            node.children_start += this.page_length;\n            node.has_more_children = has_more;\n            this.select_node(node);\n          }\n        );\n      } else {\n        node.open = !node.open;\n        this.select_node(node);\n      }\n    },\n    load_more(node) {\n      if (node.has_more_children) {\n        let start = node.children_start;\n        node.children_loading = true;\n        this.get_files_in_folder(node.value, start).then(\n          ({ files, has_more }) => {\n            node.children = node.children.concat(files);\n            node.children_start += this.page_length;\n            node.has_more_children = has_more;\n            node.children_loading = false;\n          }\n        );\n      }\n    },\n    select_node(node) {\n      //if (node.is_leaf) {\n        this.selected_node = node;\n      //}\n    },\n    get_files_in_folder(folder, start) {\n      return frappe\n      .call(\"pibidav.pibidav.custom.get_nc_files_in_folder\", {\n        folder,\n        start,\n        page_length: this.page_length\n      })\n      .then(r => {\n        let { files = [], has_more = false } = r.message || {};\n        files = files.map(file => this.make_file_node(file));\n        return { files, has_more };\n      });\n    },\n    make_file_node(file) {\n      let filename = file.file_name || file.name;\n      let label = frappe.utils.file_name_ellipsis(filename, 40);\n      return {\n        label: label,\n        filename: filename,\n        file_url: file.file_url,\n        value: file.name,\n        is_leaf: !file.is_folder,\n        fetched: !file.is_folder, // fetched if node is leaf\n        children: [],\n        children_loading: false,\n        children_start: 0,\n        open: false,\n        fetching: false\n      };\n    },\n    select_folder() {\n      let selected_file = this.selected_node;\n      return this.upload_to_folder({\n        is_folder: !selected_file.is_leaf,\n\tfile_name: selected_file.filename,\n        fileid: selected_file.file_url,\n        path: selected_file.value\n      });\n    },\n    upload_to_folder(file) {\n      return file;\n    }\n  }\n};\n","// Copyright (c) 2022, pibiCo and Contributors\n// MIT License. See license.txt\n\nimport NcBrowser from './nc_addon';\n\nfrappe.provide('frappe.ui');\nfrappe.ui.pibiDAV = NcBrowser;\n","import NcBrowserComponent from './NcBrowser.vue';\n\nexport default class Browser {\n\tconstructor({\n\t\twrapper,\n\t\tmethod,\n\t\ton_success,\n\t\tdoctype,\n\t\tdocname,\n\t\tfieldname,\n\t\tfiles,\n\t\tfolder,\n\t\tdisable_file_browser,\n\t\tfrm\n\t} = {}) {\n\n\t\tif (!wrapper) {\n\t\t\tthis.make_dialog();\n\t\t} else {\n\t\t\tthis.wrapper = wrapper.get ? wrapper.get(0) : wrapper;\n\t\t}\n\n\t\tthis.$ncbrowser = new Vue({\n\t\t\tel: this.wrapper,\n\t\t\trender: h => h(NcBrowserComponent, {\n\t\t\t\tprops: {\n\t\t\t\t\tshow_upload_button: !Boolean(this.dialog),\n\t\t\t\t\tdoctype,\n\t\t\t\t\tdocname,\n\t\t\t\t\tfieldname,\n\t\t\t\t\tmethod,\n\t\t\t\t\tfolder,\n\t\t\t\t\ton_success,\n\t\t\t\t\tdisable_file_browser\n\t\t\t\t}\n\t\t\t})\n\t\t});\n\n\t\tthis.browser = this.$ncbrowser.$children[0];\n\n\t\tthis.browser.$watch('close_dialog', (close_dialog) => {\n\t\t\tif (close_dialog) {\n\t\t\t\tthis.dialog && this.dialog.hide();\n\t\t\t}\n\t\t});\n\n  }\n  \n\tselect_folder() {\n\t\tthis.dialog && this.dialog.get_primary_btn().prop('disabled', true);\n\t\treturn this.browser.select_folder();\n\t}\n\n\tmake_dialog() {\n\t\tthis.dialog = new frappe.ui.Dialog({\n\t\t\ttitle: __('Select NextCloud Folder'),\n      size: 'large',\n      primary_action_label: __('Select'),\n\t\t\tprimary_action: () => {\n        let nc_folder = this.select_folder();\n        let nc_create_folder = this.browser.ncCreateFolder;\n        let secret = null;\n        let share_type = null;\n        if (nc_create_folder) {\n          secret = this.browser.secret;\n          share_type = this.browser.shareType;\n        }\n        let dtdn = this.wrapper.ownerDocument.body.getAttribute('data-route').replace('Form/', '');\n        let pos = dtdn.lastIndexOf('/');\n        let docname = dtdn.substr(pos+1);\n        let doctype = dtdn.replace('/'+docname,'')\n        if (nc_folder.is_folder) {\n          //frappe.db.set_value(doctype, docname, 'nc_folder', nc_folder.path);\n          console.log(`Create Folder: ${nc_create_folder} sharing ${share_type} with password ${secret}`);\n          frappe.db.set_value(\"PibiDAV Addon\", `${docname}`, {\n            \"nc_folder\": nc_folder.path,\n            \"secret\": secret,\n            \"sharing_option\": share_type,\n            \"nc_enable\": 1\n          });\n        } else {\n          frappe.msgprint(__('You have selected a file and not a folder'), nc_folder.file_name);\n          return false;\n        }\n        \n        this.dialog.hide();\n        //window.location.reload();\n      }  \n\t\t});\n\n\t\tthis.wrapper = this.dialog.body;\n\t\tthis.dialog.show();\n\t\tthis.dialog.$wrapper.on('hidden.bs.modal', function() {\n\t\t\t$(this).data('bs.modal', null);\n\t\t\t$(this).remove();\n\t\t});\n\t}\n}\n"],"names":["name","props","components","TreeNode","frappe","ui","computed","icon","let","icons","open","utils","closed","leaf","this","node","is_leaf","data","label","__","value","children","children_start","children_loading","fetching","fetched","selected_node","page_length","mounted","toggle_node","methods","select_node","get_files_in_folder","then","ref","files","has_more_children","has_more","load_more","start","concat","folder","call","r","message","map","file","make_file_node","filename","file_name","file_name_ellipsis","file_url","is_folder","select_folder","selected_file","upload_to_folder","fileid","path","provide","pibiDocs","[object Object]","wrapper","get","make_dialog","$ncbrowser","Vue","el","render","h","NcBrowserComponent","show_upload_button","Boolean","dialog","doctype","docname","fieldname","method","on_success","disable_file_browser","browser","$children","$watch","close_dialog","hide","get_primary_btn","prop","Dialog","title","size","primary_action_label","primary_action","nc_folder","dtdn","ownerDocument","body","getAttribute","replace","pos","lastIndexOf","substr","db","set_value","msgprint","show","$wrapper","on","$","remove","secret","ncCreateFolder","shareType","pibiDAV","nc_create_folder","share_type","console","log","sharing_option","nc_enable"],"mappings":"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"}